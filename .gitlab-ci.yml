# Select image from https://hub.docker.com/_/php/
default:
  image: php:7.3
  before_script:
    - apt-get update -yqq
    - apt-get install git zip zlib1g-dev libzip-dev libxml2-dev libpng-dev libghc-curl-dev libldb-dev libldap2-dev -yqq
    - docker-php-ext-install pdo_mysql zip xml intl mbstring gd curl bcmath opcache ldap
    - pecl install xdebug \
      && docker-php-ext-enable xdebug
    - curl -sS https://getcomposer.org/installer | php
    - php composer.phar install
    - php bin/console aeneria:install -n
    - php bin/console aeneria:dev:generate-fake-data --from="7 days ago" --user-name=admin --user-password=password
    - php bin/console aeneria:user:grant admin
    - php bin/console aeneria:dev:generate-fake-data --from="7 days ago" --user-name=user-test --user-password=password

services:
  - mysql:5.5

variables:
  MYSQL_DATABASE: db
  MYSQL_ROOT_PASSWORD: password
  GIT_SUBMODULE_STRATEGY: recursive

# Select what we should cache
cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - vendor/
    - node_modules/

stages:
  - build
  - tests
  - release

# build-asset:
#   inherit:
#       default: false
#   stage: build
#   image: node:10-alpine
#   script:
#     - apk add --no-cache jq python gcc g++ make
#     - yarn install
#     - yarn build
#   artifacts:
#     paths:
#       - public/build

# php-test:
#   inherit:
#       default: true
#   stage: tests
#   coverage: '/^\s*Lines:\s*\d+.\d+\%/'
#   script:
#     - php bin/phpunit --coverage-text --colors=never

# documentation-build-test:
#   inherit:
#       default: false
#   stage: tests
#   image: python:3.7-alpine
#   script:
#     - pip install -U sphinx
#     - cd docs
#     - sphinx-build -b html . _build

release-on-tag:
  inherit:
      default: false
  stage: release
  only:
    - tags
  image: docker:stable
  before_script:
    - apk add --update curl git && rm -rf /var/cache/apk/*
  script:
    - CURRENT_TAG=$(git describe --tags --abbrev=0)
    - >
      curl \
        --header 'Content-Type: application/json' --header "PRIVATE-TOKEN: ${CI_JOB_TOKEN}" \
        --data "{ \"name\": \"Release ${CURRENT_TAG}\", \"tag_name\": \"v${CURRENT_TAG}\", \"assets\": { \"count\": 4, \"sources\": [ { \"format\": \"zip\", \"url\": \"https://${CI_SERVER_HOST}${CI_PROJECT_PATH}/-/archive/${CI_COMMIT_REF_NAME}/${CI_PROJECT_NAME}-${CI_COMMIT_REF_NAME}.zip\" }, { \"format\": \"tar.gz\", \"url\": \"https://${CI_SERVER_HOST}${CI_PROJECT_PATH}/-/archive/${CI_COMMIT_REF_NAME}/${CI_PROJECT_NAME}-${CI_COMMIT_REF_NAME}.tar.gz\" }, { \"format\": \"tar.bz2\", \"url\": \"https://${CI_SERVER_HOST}${CI_PROJECT_PATH}/-/archive/${CI_COMMIT_REF_NAME}/${CI_PROJECT_NAME}-${CI_COMMIT_REF_NAME}.tar.bz2\" }, { \"format\": \"tar\", \"url\": \"https://${CI_SERVER_HOST}${CI_PROJECT_PATH}/-/archive/${CI_COMMIT_REF_NAME}/${CI_PROJECT_NAME}-${CI_COMMIT_REF_NAME}.tar\" } ] } }" \
        --request POST "https://${CI_SERVER_HOST}/api/v4/projects/${CI_PROJECT_ID}/releases"

