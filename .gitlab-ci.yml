default:
  image: php:7.3
  before_script:
    - apt-get update -yqq
    - apt-get install git zip zlib1g-dev libzip-dev libxml2-dev libpng-dev libghc-curl-dev libldb-dev libldap2-dev -yqq
    - docker-php-ext-install pdo_mysql zip xml intl mbstring gd curl bcmath opcache ldap
    - pecl install xdebug \
      && docker-php-ext-enable xdebug
    - curl -sS https://getcomposer.org/installer | php
    - php composer.phar install
    - php bin/console aeneria:install -n
    - php bin/console aeneria:dev:generate-fake-data --from="7 days ago" --user-name=admin --user-password=password
    - php bin/console aeneria:user:grant admin
    - php bin/console aeneria:dev:generate-fake-data --from="7 days ago" --user-name=user-test --user-password=password

services:
  - mysql:5.5

variables:
  MYSQL_DATABASE: db
  MYSQL_ROOT_PASSWORD: password
  GIT_SUBMODULE_STRATEGY: recursive

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - vendor/
    - node_modules/

stages:
  - build
  - tests
  - release

build-asset:
  inherit:
    default: false
  stage: build
  image: node:10-alpine
  script:
    - apk add --no-cache jq python gcc g++ make
    - yarn install
    - yarn build
  artifacts:
    expire_in: '1 hour'
    paths:
      - public/build

# php-test:
#   inherit:
#     default: true
#   stage: tests
#   coverage: '/^\s*Lines:\s*\d+.\d+\%/'
#   script:
#     - php bin/phpunit --coverage-text --colors=never

# documentation-build-test:
#   inherit:
#     default: false
#   stage: tests
#   image: python:3.7-alpine
#   script:
#     - pip install -U sphinx
#     - cd docs
#     - sphinx-build -b html . _build

release-aarchive:
  inherit:
    default: false
  stage: release
  image: docker:stable
  before_script:
    - apk add --update curl tar zip && rm -rf /var/cache/apk/*
  script:
    - cd ..
    - tar -cvf aeneria-toto.tar aeneria-app/
    - mv aeneria-toto.tar aeneria-app/.
    - tar -zcvf aeneria-toto.tar.gz aeneria-app/
    - mv aeneria-toto.tar.gz aeneria-app/.
    - zip -r aeneria-toto.zip aeneria-app/
    - mv aeneria-toto.zip aeneria-app/.
  artifacts:
    paths:
      - ../aeneria-toto.tar
      - ../aeneria-toto.tar.gz
      - ../aeneria-toto.zip
    # - >
    #   curl \
    #     --header 'Content-Type: application/json' --header "PRIVATE-TOKEN: ${GITLAB_ACCESS_TOKEN}" \
    #     --data "{ \"name\": \"V${CI_COMMIT_TAG}\", \"tag_name\": \"${CI_COMMIT_TAG}\"}" \
    #     --request POST "https://${CI_SERVER_HOST}/api/v4/projects/${CI_PROJECT_ID}/releases"


release-on-tag:
  inherit:
    default: false
  stage: release
  only:
    - tags
  image: docker:stable
  before_script:
    - apk add --update curl tar zip && rm -rf /var/cache/apk/*
  script:
    - cd ..
    - tar -cvf aeneria-$CI_COMMIT_TAG.tar aeneria-app/
    - mv aeneria-$CI_COMMIT_TAG.tar aeneria-app/.
    - tar -zcvf aeneria-$CI_COMMIT_TAG.tar.gz aeneria-app/
    - mv aeneria-$CI_COMMIT_TAG.tar.gz aeneria-app/.
    - zip -r aeneria-$CI_COMMIT_TAG.zip aeneria-app/
    - mv aeneria-$CI_COMMIT_TAG.zip aeneria-app/.
    - >
      curl \
        --header 'Content-Type: application/json' --header "PRIVATE-TOKEN: ${GITLAB_ACCESS_TOKEN}" \
        --data "{ \"name\": \"V${CI_COMMIT_TAG}\", \"tag_name\": \"${CI_COMMIT_TAG}\"}" \
        --request POST "https://${CI_SERVER_HOST}/api/v4/projects/${CI_PROJECT_ID}/releases"
  artifacts:
    paths:
      - aeneria-$CI_COMMIT_TAG.tar
      - aeneria-$CI_COMMIT_TAG.tar.gz
      - aeneria-$CI_COMMIT_TAG.zip

