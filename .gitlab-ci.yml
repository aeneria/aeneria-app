default:
  image: php:7.3
  before_script:
    - apt-get update -yqq
    - apt-get install git zip zlib1g-dev libzip-dev libxml2-dev libpng-dev libghc-curl-dev libldb-dev libldap2-dev -yqq
    - docker-php-ext-install pdo_mysql zip xml intl mbstring gd curl bcmath opcache ldap
    - pecl install xdebug \
      && docker-php-ext-enable xdebug
    - curl -sS https://getcomposer.org/installer | php

services:
  - mysql:5.5

variables:
  MYSQL_DATABASE: db
  MYSQL_ROOT_PASSWORD: password
  GIT_SUBMODULE_STRATEGY: recursive

stages:
  - build
  - tests
  - release

# On build la CSS et le JS
build:assets:
  inherit:
    default: false
  stage: build
  image: node:10-alpine
  script:
    - apk add --no-cache jq python gcc g++ make
    - yarn install
    - yarn build
  artifacts:
    expire_in: '1 hour'
    paths:
      - public/build

# On descend les paquets composer
build:composer-install:
  inherit:
    default: true
  stage: build
  script:
    - php composer.phar install --no-dev
  artifacts:
    expire_in: '1 hour'
    paths:
      - vendor

# Tests PHPUNIT
test:phpunit:
  inherit:
    default: true
  stage: tests
  coverage: '/^\s*Lines:\s*\d+.\d+\%/'
  script:
    - cp .env.dist .env
    - sed -i -e "s/%%ENEDIS_CLIENT_ID%%/${ENEDIS_CLIENT_ID}/g" .env
    - sed -i -e "s/%%ENEDIS_CLIENT_SECRET%%/${ENEDIS_CLIENT_SECRET}/g" .env
    - sed -i -e "s/%%ENEDIS_REDIRECT_URI%%/${ENEDIS_REDIRECT_URI}/g" .env
    - php composer.phar install
    - php bin/console aeneria:install -n
    - php bin/console aeneria:dev:generate-fake-data --from="7 days ago" --user-name=admin --user-password=password
    - php bin/console aeneria:user:grant admin
    - php bin/console aeneria:dev:generate-fake-data --from="7 days ago" --user-name=user-test --user-password=password
    - php bin/phpunit --coverage-text --colors=never -vvv

# On vérifie que la documentation build correctement
test:documentation-build:
  inherit:
    default: false
  stage: tests
  image: python:3.7-alpine
  script:
    - pip install -U sphinx
    - cd docs
    - sphinx-build -b html . _build

# Sur un tag sur master, on crée une release contenant un lien vers les builds
release:app:
  inherit:
    default: false
  stage: release
  only:
    - tags
  image: docker:stable
  before_script:
    - apk add --update curl tar zip && rm -rf /var/cache/apk/*
  script:
    - cd ..
    - tar -cvf aeneria-app.tar aeneria-app/
    - tar -zcvf aeneria-app.tar.gz aeneria-app/
    - tar -cjvf aeneria-app.tar.bz2 aeneria-app/
    - zip -r aeneria-app.zip aeneria-app/
    - >
      curl \
        --header 'Content-Type: application/json' --header "PRIVATE-TOKEN: ${GITLAB_ACCESS_TOKEN}" \
        --data "{ \
          \"name\": \"v${CI_COMMIT_TAG}\", \
          \"tag_name\": \"${CI_COMMIT_TAG}\", \
          \"assets\": { \
            \"links\": [\
              { \
                \"name\": \"aeneria-app.tar\", \
                \"url\": \"https://${CI_SERVER_HOST}/${CI_PROJECT_PATH}/-/jobs/artifacts/${CI_COMMIT_TAG}/raw/aeneria-app.tar?job=${CI_JOB_NAME}\", \
              }, \
              { \
                \"name\": \"aeneria-app.tar.gz\", \
                \"url\": \"https://${CI_SERVER_HOST}/${CI_PROJECT_PATH}/-/jobs/artifacts/${CI_COMMIT_TAG}/raw/aeneria-app.tar.gz?job=${CI_JOB_NAME}\", \
                \"filepath\": \"/\" \
              }, \
              { \
                \"name\": \"aeneria-app.tar.bz2\", \
                \"url\": \"https://${CI_SERVER_HOST}/${CI_PROJECT_PATH}/-/jobs/artifacts/${CI_COMMIT_TAG}/raw/aeneria-app.tar.bz2?job=${CI_JOB_NAME}\", \
              }, \
              { \
                \"name\": \"aeneria-app.zip\", \
                \"url\": \"https://${CI_SERVER_HOST}/${CI_PROJECT_PATH}/-/jobs/artifacts/${CI_COMMIT_TAG}/raw/aeneria-app.zip?job=${CI_JOB_NAME}\", \
              }\
            ] \
          } \
        }" \
        --request POST "https://${CI_SERVER_HOST}/api/v4/projects/${CI_PROJECT_ID}/releases"
  artifacts:
    paths:
      - aeneria-app.tar
      - aeneria-app.tar.gz
      - aeneria-app.tar.bz2
      - aeneria-app.zip
